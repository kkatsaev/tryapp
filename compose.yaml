version: '3.8'

services:
  web:
    image: nginx:latest
    restart: unless-stopped
    #profiles: [disabled]
    ports:
      # using 'host' mode now to simplify diagnostics
      # * https://stackoverflow.com/questions/49415595/docker-swarm-get-real-ip-client-host-in-nginx
      # * TODO: custom balancer for X-Real-IP
      - mode: host
        protocol: tcp
        published: 80
        target: 80
      - mode: host
        protocol: tcp
        published: 443
        target: 443
    volumes:
      # tmp DATA_ROOT from .env usage until image isn't built
      - ${DATA_ROOT}/deploy/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      # templates to render environment variables
      #   https://github.com/docker-library/docs/tree/master/nginx#using-environment-variables-in-nginx-configuration-new-in-119
      - ${DATA_ROOT}/deploy/nginx/templates:/etc/nginx/templates:ro
      - ${DATA_ROOT}/pages:/usr/share/nginx/html:ro
      - ${DATA_ROOT}/certbot/www:/var/www/certbot:ro
      - ${DATA_ROOT}/certbot/conf:/etc/letsencrypt:ro
    environment:
      - SERVER_NAME=${SERVER_NAME:-localhost}

  #TODO: split compose.override.yaml / compose.release.yaml
  certbot:
    image: certbot/certbot:latest
    container_name: certbot
    volumes:
      - ${DATA_ROOT}/certbot/www:/var/www/certbot:rw
      - ${DATA_ROOT}/certbot/conf:/etc/letsencrypt:rw
    environment:
      - SERVER_NAME=${SERVER_NAME:-localhost}
    entrypoint:
      # development: generate fake self-signed certificate to be used in local nginx
      # TODO: don't touch existing 
      sh -c '
      _PATH=/etc/letsencrypt/live/$$SERVER_NAME &&
      mkdir -p $$_PATH &&
      openssl req -x509 -nodes -days 365 -newkey rsa:2048
      -keyout $$_PATH/privkey.pem
      -out    $$_PATH/fullchain.pem
      -subj "/C=ZZ/ST=State/L=City/O=Development/CN=localhost"
      '
#    command:
#      certonly
#      --webroot
#      --webroot-path=/var/www/certbot
#      --non-interactive
#      --agree-tos
#      --domain ${SERVER_NAME}
#      --keep-until-expiring
#      --test-cert
#      #--dry-run
